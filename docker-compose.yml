x-env-variables: &default-env
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password

networks:
  app-net:
    driver: bridge

services:
  # The frontend web application
  web:
    build:
      context: ./web_app
      args:
        # You can pass the API URL to your frontend build like this:
        # This URL is used by the browser, so it must be accessible from the host.
        - API_URL=http://go-api:8080
    container_name: app-distribution-web-app
    ports:
      - "3000:3000"
    # The web app depends on the API being available
    depends_on:
      - go-api
    restart: unless-stopped
    networks:
      - app-net

  # The Go backend API server
  go-api:
    build:
      context: ./go_server
    container_name: app-distribution-go-server
    ports:
      - "8080:8080"
    volumes:
      - ./go_uploads:/storage
    environment:
      <<: *default-env
      POSTGRES_DB: app_distribution
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
    restart: unless-stopped
    networks:
      - app-net
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    container_name: app-distribution-postgres
    ports:
      - "5432:5432"
    environment:
      <<: *default-env
      POSTGRES_DB: app_distribution
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-net

volumes:
  postgres-data:
